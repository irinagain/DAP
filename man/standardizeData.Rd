% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardizeData.R
\name{standardizeData}
\alias{standardizeData}
\title{Standardize the data}
\usage{
standardizeData(X, Y, center = T)
}
\arguments{
\item{X}{A n by p matrix of n observations with p measurements per each.}

\item{Y}{The class-indicator denoting a binary label for each observation.}

\item{center}{wheather \eqn{X} will be centered or not. The default is "TURE".}
}
\value{
A list with components:
    \item{X1}{Standardized observations labeled in group 1.}
    \item{X2}{Standardized observations labeled in group 2.}
    \item{coef1}{Coefficient of \eqn{X1} for back-scaling.}
    \item{coef2}{Coefficient of \eqn{X2} for back-scaling.}
    \item{Xmean}{Column mean for the matrix \eqn{X}.}
}
\description{
Given matrix \eqn{X} and class-indicator \eqn{Y}, the following function centers \eqn{X}, and then forms \eqn{X1} and \eqn{X2} which are scaled, as well as coefficients for back-scaling.
}
\examples{
# An example for the function standardizeData

## Generate data
n1 = n2 = 50
n_test = 50
p = 100
mu1 = rep(0, p)
mu2 = rep(3, p)
Sigma1 = diag(p)
Sigma2 = 0.5* diag(p)

## Build training data
x1 = MASS::mvrnorm(n = n1, mu = mu1, Sigma = Sigma1)
x2 = MASS::mvrnorm(n = n2, mu = mu2, Sigma = Sigma2)
y1 = rep(1, n1)
y2 = rep(2, n2)
xtrain <- rbind(x1, x2)
ytrain <- c(rep(1, n1), rep(2, n2))

## Standardize data
out_s <- standardizeData(xtrain, ytrain, center = F)

}
